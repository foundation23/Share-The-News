{"version":3,"sources":["forms/LoginForm.jsx","../node_modules/react-router-dom/es/Redirect.js","components/Login/Login.jsx"],"names":["validate","Yup","shape","email","min","max","required","password","LoginForm","props","initialValues","rememberMe","captcha","validationSchema","onSubmit","values","setStatus","errors","touched","status","name","type","placeholder","captchaUrl","src","warnAboutDeprecatedESMImport","Redirect","connect","state","auth","isAuth","login","to","undefined"],"mappings":"kJAIMA,EAAWC,MAAaC,MAAM,CAChCC,MAAOF,MACFG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,WACLC,SAAUN,MACLG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,aA4CME,EAzCG,SAACC,GAAD,OAEd,8BACI,cAAC,IAAD,CACIC,cAAe,CAAEP,MAAO,GACpBI,SAAU,GACVI,WAAY,GACZC,QAAS,IAEbC,iBAAkBb,EAClBc,SAAU,SAACC,EAAD,GAA0B,IAAhBC,EAAe,EAAfA,UAChBP,EAAMK,SAASC,EAAQC,IAR/B,SAWK,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,OAApB,EAA4BJ,OAA5B,EAAmCC,UAAnC,OACG,eAAC,IAAD,WACI,gCACA,cAAE,IAAF,CAAQI,KAAK,QAAQC,KAAK,QAAQC,YAAY,UAC7CJ,EAAQf,OAASc,EAAOd,OAAS,8BAAMc,EAAOd,WAE/C,gCACA,cAAE,IAAF,CAAQiB,KAAK,WAAWC,KAAK,WAAWC,YAAY,aACnDJ,EAAQX,UAAYU,EAAOV,UAAY,8BAAMU,EAAOV,cAErD,8BAAMY,IACN,gCACA,cAAE,IAAF,CAAQE,KAAK,WAAWD,KAAK,eAD7B,iBAIA,gCACKX,EAAMc,YAAc,qBAAKC,IAAKf,EAAMc,aACpCd,EAAMc,YAAc,cAAE,IAAF,CAAQH,KAAK,UAAUE,YAAY,YACvDJ,EAAQN,SAAWK,EAAOL,SAAW,8BAAMK,EAAOL,aAGvD,wBAASS,KAAK,SAAd,6B,+BCjDpBI,YAA6B,YAGdC,QAAf,ECsBeC,uBALS,SAACC,GAAD,MAAY,CAChCL,WAAWK,EAAMC,KAAKN,WACtBO,OAAQF,EAAMC,KAAKC,UAGmB,CAACC,WAA5BJ,EApBD,SAAClB,GAMX,OAAIA,EAAMqB,OACC,cAACJ,EAAD,CAAUM,GAAI,aAGlB,gCACH,gDACA,cAAC,EAAD,CAAWlB,SAXE,SAACC,EAAQC,GACtBA,OAAUiB,GAClBxB,EAAMsB,MAAMhB,EAAOZ,MAAOY,EAAOR,SAAUQ,EAAOJ,WAAYI,EAAOH,QAASI,IASvCO,WAAYd,EAAMc","file":"static/js/10.78fc952f.chunk.js","sourcesContent":["import {Field, Form, Formik, status} from \"formik\";\r\nimport React from \"react\";\r\nimport * as Yup from 'yup';\r\n\r\nconst validate = Yup.object().shape({\r\n    email: Yup.string()\r\n        .min(2, 'Too Short!')\r\n        .max(30, 'Too Long!')\r\n        .required(),\r\n    password: Yup.string()\r\n        .min(2, 'Too Short!')\r\n        .max(20, 'Too Long!')\r\n        .required(),\r\n});\r\n\r\nconst LoginForm = (props) => (\r\n\r\n    <div>\r\n        <Formik\r\n            initialValues={{ email: '',\r\n                password: '',\r\n                rememberMe: '',\r\n                captcha: '',\r\n            }}\r\n            validationSchema={validate}\r\n            onSubmit={(values, {setStatus}) => {\r\n                props.onSubmit(values, setStatus);\r\n            }}\r\n        >\r\n            {({ errors, touched, status, values,setStatus}) => (\r\n                <Form >\r\n                    <div>\r\n                    < Field name=\"email\" type=\"email\" placeholder=\"email\"/>\r\n                    {touched.email && errors.email && <div>{errors.email}</div>}\r\n                    </div>\r\n                    <div>\r\n                    < Field name=\"password\" type=\"password\" placeholder=\"password\"/>\r\n                    {touched.password && errors.password && <div>{errors.password}</div>}\r\n                    </div>\r\n                    <div>{status}</div>\r\n                    <div>\r\n                    < Field type=\"checkbox\" name=\"rememberMe\" />\r\n                    Remember Me\r\n                    </div>\r\n                    <div>\r\n                        {props.captchaUrl && <img src={props.captchaUrl} />}\r\n                        {props.captchaUrl && < Field name=\"captcha\" placeholder=\"captcha\"/>}\r\n                        {touched.captcha && errors.captcha && <div>{errors.captcha}</div>}\r\n\r\n                    </div>\r\n                    < button type=\"submit\">Submit</button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    </div>);\r\n\r\nexport default LoginForm;","import warnAboutDeprecatedESMImport from \"./warnAboutDeprecatedESMImport.js\";\nwarnAboutDeprecatedESMImport(\"Redirect\");\n\nimport { Redirect } from \"../esm/react-router-dom.js\";\nexport default Redirect;\n","import React from 'react';\r\nimport LoginForm from \"../../forms/LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/AuthReducer\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (values, setStatus) => {\r\n        setStatus(undefined);\r\nprops.login(values.email, values.password, values.rememberMe, values.captcha, setStatus)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Authentication</h1>\r\n        <LoginForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl:state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect  (mapStateToProps, {login}) (Login);"],"sourceRoot":""}